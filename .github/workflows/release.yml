name: build_and_release

env:
  PRODUCT_NAME: libgen-opds.koplugin

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
        matrix:
            platform: [ linux-arm, linux-arm64 ]
    outputs:
      tag: ${{  steps.release_name.outputs.version  }}
    steps:
      - name: Checkout this repository
        uses: actions/checkout@main
        with:
          path: './${{  env.PRODUCT_NAME  }}'
      - name: Download libgen-opds server binary
        id: get_libgen-opds
        uses: robinraju/release-downloader@v1
        with:
          repository: 'b-/libgen-opds'
          latest: true
          preRelease: false
          fileName: 'libgen-opds_${{  matrix.platform  }}'
          out-file-path: '${{  env.PRODUCT_NAME  }}/libgen-opds'
      - name: Rename the downloaded binary
        run: mv '${{  env.PRODUCT_NAME  }}/libgen-opds/libgen-opds_${{  matrix.platform  }}' '${{  env.PRODUCT_NAME  }}/libgen-opds/libgen-opds'
      - name: Template our release name
        id: release_name
        run: |
          libgen_opds_TAG_raw="${{steps.get_libgen-opds.outputs.tag_name}}"
          libgen_opds_TAG="$(echo "$libgen_opds_TAG_raw" | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z)"
          if [[ "${{ github.ref_type  }}" == "tag" ]] ; then
            VERSION="${{  github.ref_name  }}-${libgen_opds_TAG#v}"
            # example: ${{  env.PRODUCT_NAME  }}_v1.0-2.30.0-arm64.tar.gz
          else
            VERSION="${{  github.ref_name  }}_$(date -I)-${libgen_opds_TAG#v}"
            # example: ${{  env.PRODUCT_NAME  }}_main_2024-07-15_2.30.0-arm64.tar.gz
          fi
          echo "version=${VERSION}" | tee -a $GITHUB_OUTPUT
          echo "outfile=${{  env.PRODUCT_NAME  }}_${VERSION}-${{  matrix.platform  }}.tar.gz" >> "$GITHUB_OUTPUT"
      - name: Compress archive
        run: tar -czvf "${{  steps.release_name.outputs.outfile  }}" ${{  env.PRODUCT_NAME  }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{  steps.release_name.outputs.outfile  }}
          path: ${{  steps.release_name.outputs.outfile  }}
  release:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - run: gh release delete ${{  needs.build.outputs.tag  }} --repo ${{  github.repository  }} --yes || true
        env:
          GH_TOKEN: ${{ github.token }}
      - uses: ncipollo/release-action@v1
        with:
          tag: "${{  needs.build.outputs.tag  }}"
          artifacts: "**/*.tar.gz"
